{"version":3,"sources":["components/CastList/CastList.js","views/Cast.js"],"names":["CastList","cast","length","className","map","id","profile_path","name","character","src","normalizePosterPath","alt","Cast","state","a","movieId","this","props","match","params","getCredits","response","setState","data","Component"],"mappings":"2QAgCeA,EA5BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,mCACGA,EAAKC,OAAS,EACb,oBAAIC,UAAU,WAAd,SACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,qBAAIL,UAAU,gBAAd,UACE,qBACEA,UAAU,eACVM,IAAKC,YAAoBJ,GACzBK,IAAKJ,IAEP,oBAAIJ,UAAU,iBAAd,SAAgCI,IAChC,mBAAGJ,UAAU,gBAAb,SAA8BK,MAPGH,QAYvC,oBAAIF,UAAU,gBAAd,sECjBAS,E,4MACJC,MAAQ,CACNZ,KAAM,I,8FAGR,8BAAAa,EAAA,6DACUC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QADV,SAEyBK,YAAWL,GAFpC,OAEQM,EAFR,OAGEL,KAAKM,SAAS,CAAErB,KAAMoB,EAASE,KAAKtB,OAHtC,gD,0EAMA,WACE,OAAO,cAAC,EAAD,CAAUA,KAAMe,KAAKH,MAAMZ,W,GAZnBuB,aAgBJZ","file":"static/js/Cast.cc91b754.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport './CastList.scss';\nimport { normalizePosterPath } from '../FetchNormalizer';\n\nconst CastList = ({ cast }) => (\n  <>\n    {cast.length > 0 ? (\n      <ul className=\"CastList\">\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li className=\"CastList-item\" key={id}>\n            <img\n              className=\"CastList-img\"\n              src={normalizePosterPath(profile_path)}\n              alt={name}\n            ></img>\n            <h4 className=\"CastList-title\">{name}</h4>\n            <p className=\"CastList-text\">{character}</p>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <h5 className=\"Content-title\">\n        Sorry! There is no cast information for this movie :(\n      </h5>\n    )}\n  </>\n);\n\nCastList.propTypes = {\n  cast: PropTypes.array.isRequired,\n};\n\nexport default CastList;\n","import { Component } from 'react';\r\nimport { getCredits } from '../services/movies-api';\r\nimport CastList from '../components/CastList/CastList';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await getCredits(movieId);\r\n    this.setState({ cast: response.data.cast });\r\n  }\r\n\r\n  render() {\r\n    return <CastList cast={this.state.cast} />;\r\n  }\r\n}\r\n\r\nexport default Cast;"],"sourceRoot":""}