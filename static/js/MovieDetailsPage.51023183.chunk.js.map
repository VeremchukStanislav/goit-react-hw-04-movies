{"version":3,"sources":["components/MovieDetails/MovieDetails.js","views/MovieDetailsPage.js","services/movies-api.js","images/noimage.svg","components/FetchNormalizer.js"],"names":["Cast","lazy","Reviews","MovieDetails","release_date","poster_path","title","vote_average","overview","genres","match","location","className","src","alt","map","ganre","name","id","to","pathname","url","state","activeClassName","console","log","fallback","Loader","path","component","MovieDetailsPage","movie","handleGoBack","props","history","from","push","routes","home","a","movieId","this","params","getMovieById","response","data","setState","normalizePosterPath","normalizeDate","normalizeScore","type","onClick","Component","BASE_URL","API_KEY","getTranding","axios","get","getMovieByQuery","query","getCredits","getReviews","noimage","score","date","Date","getFullYear"],"mappings":"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","file":"static/js/MovieDetailsPage.51023183.chunk.js","sourcesContent":["import { logDOM } from '@testing-library/dom';\nimport PropTypes from 'prop-types';\nimport { Suspense, lazy } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Loader from '../Loader/Loader';\nimport './MovieDetails.scss';\n\nconst Cast = lazy(() =>\n  import('../../views/Cast' /* webpackChunkName: \"Cast\" */),\n);\n\nconst Reviews = lazy(() =>\n  import('../../views/Reviews' /* webpackChunkName: \"Reviews\" */),\n);\n\nconst MovieDetails = ({\n  release_date,\n  poster_path,\n  title,\n  vote_average,\n  overview,\n  genres,\n  match,\n  location,\n}) => (\n  <>\n    <div className=\"MovieDetails\">\n      <div className=\"MovieDetails__poster\">\n        <img className=\"MovieDetails__img\" src={poster_path} alt={title}></img>\n      </div>\n\n      <div className=\"MovieDetails__desc\">\n        <h1>\n          {title} ({release_date})\n        </h1>\n        <p>User Score: {vote_average}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        {genres ? (\n          <ul className=\"Genres-list\">\n            {genres.map(ganre => (\n              <li className=\"Genres-list__item\" key={ganre.id}>\n                # {ganre.name}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No data</p>\n        )}\n      </div>\n    </div>\n    <div className=\"additional\">\n      <h3 className=\"additional-title\">Additional information</h3>\n      <ul className=\"additional-list\">\n        <li className=\"additional-list__item\">\n          <NavLink\n            to={{\n              pathname: `${match.url}/cast`,\n              state: { ...location.state },\n            }}\n            className=\"additional-list__link\"\n            activeClassName=\"additional-list__active\"\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li className=\"additional-list__item\">\n          <NavLink\n            to={{\n              pathname: `${match.url}/reviews`,\n              state: { ...location.state },\n            }}\n            className=\"additional-list__link\"\n            activeClassName=\"additional-list__active\"\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      {console.log(location)}\n      <Suspense fallback={<Loader />}>\n        <Route path={`${match.path}/cast`} component={Cast}></Route>\n        <Route path={`${match.path}/reviews`} component={Reviews}></Route>\n      </Suspense>\n    </div>\n  </>\n);\n\nMovieDetails.propTypes = {\n  release_date: PropTypes.number,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.array,\n  match: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport default MovieDetails;\n","import { Component } from 'react';\r\nimport { getMovieById } from '../services/movies-api';\r\nimport MovieDetails from '../components/MovieDetails/MovieDetails';\r\nimport routes from '../routes';\r\nimport {\r\n  normalizePosterPath,\r\n  normalizeDate,\r\n  normalizeScore,\r\n} from '../components/FetchNormalizer';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await getMovieById(movieId);\r\n    const { poster_path, release_date, vote_average } = response.data;\r\n    this.setState({\r\n      movie: {\r\n        ...response.data,\r\n        poster_path: normalizePosterPath(poster_path),\r\n        release_date: normalizeDate(release_date),\r\n        vote_average: normalizeScore(vote_average),\r\n      },\r\n    });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state && location.state.from) {\r\n      return history.push(location.state.from);\r\n    }\r\n    history.push(routes.home);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      release_date,\r\n      poster_path,\r\n      title,\r\n      vote_average,\r\n      overview,\r\n      genres,\r\n    } = this.state.movie;\r\n    const { match, location } = this.props;\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.handleGoBack}\r\n          className=\"MovieDetails-goback\"\r\n        >\r\n          Go back\r\n        </button>\r\n        <MovieDetails\r\n          release_date={release_date}\r\n          poster_path={poster_path}\r\n          title={title}\r\n          vote_average={vote_average}\r\n          overview={overview}\r\n          genres={genres}\r\n          match={match}\r\n          location={location}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'fc15dc45fb0a2c9bf3427e2f6d7b73db';\r\n\r\nexport const getTranding = () => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieById = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieByQuery = query => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getCredits = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getReviews = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};","export default __webpack_public_path__ + \"static/media/noimage.bb35379b.svg\";","import noimage from '../images/noimage.svg';\n\nexport const normalizePosterPath = url => {\n  if (url) {\n    return 'https://image.tmdb.org/t/p/w500' + url;\n  }\n  return noimage;\n};\n\nexport const normalizeScore = score => {\n  return score * 10;\n};\n\nexport const normalizeDate = date => {\n  const toDate = new Date(date);\n  return toDate.getFullYear();\n};\n"],"sourceRoot":""}