{"version":3,"sources":["components/MoviesList/MoviesList.js","views/Home.js","services/movies-api.js","images/noimage.svg","components/FetchNormalizer.js"],"names":["withRouter","movies","location","className","map","id","poster_path","title","to","pathname","state","from","src","normalizePosterPath","alt","Home","a","getTranding","response","this","setState","data","results","console","log","Component","BASE_URL","API_KEY","axios","get","getMovieById","movieId","getMovieByQuery","query","getCredits","getReviews","url","noimage","normalizeScore","score","normalizeDate","date","Date","getFullYear"],"mappings":"0IACA,0CA+BeA,iBA3BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACjB,oBAAIC,UAAU,aAAd,SACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,oBAAIJ,UAAU,kBAAd,SACE,eAAC,IAAD,CACEK,GAAI,CACFC,SAAS,WAAD,OAAaJ,GACrBK,MAAO,CAAEC,KAAMT,IAEjBC,UAAU,wBALZ,UAOE,qBACEA,UAAU,iBACVS,IAAKC,YAAoBP,GACzBQ,IAAG,UAAKP,EAAL,aAEJA,MAbgCF,Y,0JCJrCU,E,4MACJL,MAAQ,CACNT,OAAQ,I,8FAGV,4BAAAe,EAAA,sEACyBC,cADzB,OACQC,EADR,OAEEC,KAAKC,SAAS,CAAEnB,OAAQiB,EAASG,KAAKC,UAFxC,gD,0EAKA,WAEE,OADAC,QAAQC,MAEN,sBAAKrB,UAAU,UAAf,UACE,oBAAIA,UAAU,gBAAd,4BACA,cAAC,IAAD,CAAYF,OAAQkB,KAAKT,MAAMT,gB,GAfpBwB,aAqBJV,a,gCCzBf,gMAEMW,EAAW,+BACXC,EAAU,mCAEHV,EAAc,WAIzB,OAHiBW,IAAMC,IAAN,UACZH,EADY,uCAC2BC,EAD3B,qBAMNG,EAAe,SAAAC,GAI1B,OAHiBH,IAAMC,IAAN,UACZH,EADY,kBACMK,EADN,oBACyBJ,EADzB,qBAMNK,EAAkB,SAAAC,GAI7B,OAHiBL,IAAMC,IAAN,UACZH,EADY,iCACqBC,EADrB,kBACsCM,EADtC,qBAMNC,EAAa,SAAAH,GAIxB,OAHiBH,IAAMC,IAAN,UACZH,EADY,kBACMK,EADN,4BACiCJ,EADjC,qBAMNQ,EAAa,SAAAJ,GAIxB,OAHiBH,IAAMC,IAAN,UACZH,EADY,kBACMK,EADN,4BACiCJ,EADjC,sB,sIClCJ,UAA0B,oCCE5Bd,EAAsB,SAAAuB,GACjC,OAAIA,EACK,kCAAoCA,EAEtCC,GAGIC,EAAiB,SAAAC,GAC5B,OAAe,GAARA,GAGIC,EAAgB,SAAAC,GAE3B,OADe,IAAIC,KAAKD,GACVE","file":"static/js/Home.f2f66ac2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { normalizePosterPath } from '../../components/FetchNormalizer';\nimport './MoviesList.scss';\n\nconst MoviesList = ({ movies, location }) => (\n  <ul className=\"MoviesList\">\n    {movies.map(({ id, poster_path, title }) => (\n      <li className=\"MoviesList-item\" key={id}>\n        <NavLink\n          to={{\n            pathname: `/movies/${id}`,\n            state: { from: location },\n          }}\n          className=\"MoviesList-item__link\"\n        >\n          <img\n            className=\"MoviesList-img\"\n            src={normalizePosterPath(poster_path)}\n            alt={`${title} poster`}\n          />\n          {title}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default withRouter(MoviesList);\n","import { Component } from 'react';\r\nimport { getTranding } from '../services/movies-api';\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await getTranding();\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    console.log();\r\n    return (\r\n      <div className=\"Content\">\r\n        <h1 className=\"Content-title\">Trending today</h1>\r\n        <MoviesList movies={this.state.movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'fc15dc45fb0a2c9bf3427e2f6d7b73db';\r\n\r\nexport const getTranding = () => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieById = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieByQuery = query => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getCredits = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getReviews = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};","export default __webpack_public_path__ + \"static/media/noimage.bb35379b.svg\";","import noimage from '../images/noimage.svg';\n\nexport const normalizePosterPath = url => {\n  if (url) {\n    return 'https://image.tmdb.org/t/p/w500' + url;\n  }\n  return noimage;\n};\n\nexport const normalizeScore = score => {\n  return score * 10;\n};\n\nexport const normalizeDate = date => {\n  const toDate = new Date(date);\n  return toDate.getFullYear();\n};\n"],"sourceRoot":""}